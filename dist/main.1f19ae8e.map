{"version":3,"sources":["vdom/createElement.js","vdom/render.js","vdom/mount.js","vdom/diff.js","main.js"],"names":["tagName","attrs","children","renderElem","$el","document","createElement","Object","entries","k","v","setAttribute","child","$child","render","appendChild","vNode","createTextNode","$node","$target","replaceWith","zip","xs","ys","zipped","i","Math","min","length","push","diffAttrs","oldAttrs","newAttrs","patches","removeAttribute","patch","diffChildren","oldVChildren","newVChildren","childPatches","forEach","oldVChild","diff","additionalPatches","additionalVChild","slice","$parent","childNodes","vOldNode","vNewNode","undefined","remove","$newNode","patchAttrs","patchChildren","createVApp","count","id","dataCount","String","Array","from","src","vApp","$app","$rootEl","getElementById","setInterval","vNewApp","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAAe,kBAACA,OAAD,EAAiD;AAAA,iFAAP,EAAO;AAAA,wBAArCC,KAAqC;AAAA,MAArCA,KAAqC,2BAA7B,EAA6B;AAAA,2BAAzBC,QAAyB;AAAA,MAAzBA,QAAyB,8BAAd,EAAc;;AAC9D,SAAO;AACLF,IAAAA,OAAO,EAAPA,OADK;AAELC,IAAAA,KAAK,EAALA,KAFK;AAGLC,IAAAA,QAAQ,EAARA;AAHK,GAAP;AAKD;;;;;;;;;;;;;;;;;;;ACND,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAkC;AAAA,MAA/BH,OAA+B,QAA/BA,OAA+B;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACnD,MAAME,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuBN,OAAvB,CAAZ,CADmD,CAGnD;;AAHmD,aAI9BO,MAAM,CAACC,OAAP,CAAeP,KAAf,CAJ8B;;AAInD,2CAA4C;AAAA;AAAA,QAAhCQ,CAAgC;AAAA,QAA7BC,CAA6B;;AAC1CN,IAAAA,GAAG,CAACO,YAAJ,CAAiBF,CAAjB,EAAoBC,CAApB;AACD,GANkD,CAQnD;;;AARmD;AAAA;AAAA;;AAAA;AASnD,yBAAoBR,QAApB,8HAA8B;AAAA,UAAnBU,KAAmB;AAC5B,UAAMC,MAAM,GAAGC,MAAM,CAACF,KAAD,CAArB;AACAR,MAAAA,GAAG,CAACW,WAAJ,CAAgBF,MAAhB;AACD;AAZkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcnD,SAAOT,GAAP;AACD,CAfD;;AAiBA,IAAMU,MAAM,GAAG,SAATA,MAAS,CAAAE,KAAK,EAAI;AACtB,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAOX,QAAQ,CAACY,cAAT,CAAwBD,KAAxB,CAAP;AACD;;AAED,SAAOb,UAAU,CAACa,KAAD,CAAjB;AACD,CAND;;eAQeF;;;;;;;;;;eCzBA,kBAACI,KAAD,EAAQC,OAAR,EAAoB;AACjCA,EAAAA,OAAO,CAACC,WAAR,CAAoBF,KAApB;AACA,SAAOA,KAAP;AACD;;;;;;;;;;;ACHD;;;;;;;;;;;;AAEA,IAAMG,GAAG,GAAG,SAANA,GAAM,CAACC,EAAD,EAAKC,EAAL,EAAY;AACtB,MAAMC,MAAM,GAAG,EAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASL,EAAE,CAACM,MAAZ,EAAoBL,EAAE,CAACK,MAAvB,CAApB,EAAoDH,CAAC,EAArD,EAAyD;AACvDD,IAAAA,MAAM,CAACK,IAAP,CAAY,CAACP,EAAE,CAACG,CAAD,CAAH,EAAQF,EAAE,CAACE,CAAD,CAAV,CAAZ;AACD;;AACD,SAAOD,MAAP;AACD,CAND;;AAQA,IAAMM,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD,EAAWC,QAAX,EAAwB;AACxC,MAAMC,OAAO,GAAG,EAAhB,CADwC,CAExC;;AAFwC,aAGnB1B,MAAM,CAACC,OAAP,CAAewB,QAAf,CAHmB;;AAAA;AAAA;AAAA,QAG5BvB,CAH4B;AAAA,QAGzBC,CAHyB;;AAItCuB,IAAAA,OAAO,CAACJ,IAAR,CAAa,UAAAX,KAAK,EAAI;AACpBA,MAAAA,KAAK,CAACP,YAAN,CAAmBF,CAAnB,EAAsBC,CAAtB;AACA,aAAOQ,KAAP;AACD,KAHD;AAJsC;;AAGxC,2CAA+C;AAAA;AAK9C,GARuC,CAUxC;;;AAVwC,6BAW7BT,CAX6B;AAYtC,QAAI,EAAEA,CAAC,IAAIuB,QAAP,CAAJ,EAAsB;AACpBC,MAAAA,OAAO,CAACJ,IAAR,CAAa,UAAAX,KAAK,EAAI;AACpBA,QAAAA,KAAK,CAACgB,eAAN,CAAsBzB,CAAtB;AACA,eAAOS,KAAP;AACD,OAHD;AAID;AAjBqC;;AAWxC,OAAK,IAAMT,CAAX,IAAgBsB,QAAhB,EAA0B;AAAA,UAAftB,CAAe;AAOzB;;AAED,SAAO,UAAAS,KAAK,EAAI;AACd,4BAAoBe,OAApB,gBAA6B;AAAxB,UAAME,KAAK,GAAIF,OAAJ,KAAX;AACHE,MAAAA,KAAK,CAACjB,KAAD,CAAL;AACD;AACF,GAJD;AAKD,CAzBD;;AA2BA,IAAMkB,YAAY,GAAG,SAAfA,YAAe,CAACC,YAAD,EAAeC,YAAf,EAAgC;AACnD,MAAMC,YAAY,GAAG,EAArB;AACAF,EAAAA,YAAY,CAACG,OAAb,CAAqB,UAACC,SAAD,EAAYhB,CAAZ,EAAkB;AACrCc,IAAAA,YAAY,CAACV,IAAb,CAAkBa,IAAI,CAACD,SAAD,EAAYH,YAAY,CAACb,CAAD,CAAxB,CAAtB;AACD,GAFD;AAIA,MAAMkB,iBAAiB,GAAG,EAA1B;AANmD;AAAA;AAAA;;AAAA;AAAA;AAAA,UAOxCC,gBAPwC;AAQjDD,MAAAA,iBAAiB,CAACd,IAAlB,CAAuB,UAAAX,KAAK,EAAI;AAC9BA,QAAAA,KAAK,CAACH,WAAN,CAAkB,qBAAO6B,gBAAP,CAAlB;AACA,eAAO1B,KAAP;AACD,OAHD;AARiD;;AAOnD,yBAA+BoB,YAAY,CAACO,KAAb,CAAmBR,YAAY,CAACT,MAAhC,CAA/B,8HAAwE;AAAA;AAKvE;AAZkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcnD,SAAO,UAAAkB,OAAO,EAAI;AAAA;AAAA;AAAA;;AAAA;AAChB,4BAA6BzB,GAAG,CAACkB,YAAD,EAAeO,OAAO,CAACC,UAAvB,CAAhC,mIAAoE;AAAA;AAAA,YAAxDZ,KAAwD;AAAA,YAAjDvB,KAAiD;;AAClEuB,QAAAA,KAAK,CAACvB,KAAD,CAAL;AACD;AAHe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKhB,4BAAoB+B,iBAApB,gBAAuC;AAAlC,UAAMR,KAAK,GAAIQ,iBAAJ,KAAX;AACHR,MAAAA,KAAK,CAACW,OAAD,CAAL;AACD;;AAED,WAAOA,OAAP;AACD,GAVD;AAWD,CAzBD;;AA2BA,IAAMJ,IAAI,GAAG,SAAPA,IAAO,CAACM,QAAD,EAAWC,QAAX,EAAwB;AACnC,MAAIA,QAAQ,KAAKC,SAAjB,EAA4B;AAC1B,WAAO,UAAAhC,KAAK,EAAI;AACdA,MAAAA,KAAK,CAACiC,MAAN;AACA,aAAOD,SAAP;AACD,KAHD;AAID;;AACD,MAAI,OAAOF,QAAP,KAAoB,QAApB,IAAgC,OAAOC,QAAP,KAAoB,QAAxD,EAAkE;AAChE,QAAID,QAAQ,KAAKC,QAAjB,EAA2B;AACzB,aAAO,UAAA/B,KAAK,EAAI;AACd,YAAMkC,QAAQ,GAAG,qBAAOH,QAAP,CAAjB;AACA/B,QAAAA,KAAK,CAACE,WAAN,CAAkBgC,QAAlB;AACA,eAAOA,QAAP;AACD,OAJD;AAKD,KAND,MAMO;AACL,aAAO,UAAAlC,KAAK;AAAA,eAAIgC,SAAJ;AAAA,OAAZ;AACD;AACF;;AACD,MAAIF,QAAQ,CAAChD,OAAT,KAAqBiD,QAAQ,CAACjD,OAAlC,EAA2C;AACzC,WAAO,UAAAkB,KAAK,EAAI;AACd,UAAMkC,QAAQ,GAAG,qBAAOH,QAAP,CAAjB;AACA/B,MAAAA,KAAK,CAACE,WAAN,CAAkBgC,QAAlB;AACA,aAAOA,QAAP;AACD,KAJD;AAKD;;AAED,MAAMC,UAAU,GAAGvB,SAAS,CAACkB,QAAQ,CAAC/C,KAAV,EAAiBgD,QAAQ,CAAChD,KAA1B,CAA5B;AACA,MAAMqD,aAAa,GAAGlB,YAAY,CAACY,QAAQ,CAAC9C,QAAV,EAAoB+C,QAAQ,CAAC/C,QAA7B,CAAlC;AAEA,SAAO,UAAAgB,KAAK,EAAI;AACdmC,IAAAA,UAAU,CAACnC,KAAD,CAAV;AACAoC,IAAAA,aAAa,CAACpC,KAAD,CAAb;AACA,WAAOA,KAAP;AACD,GAJD;AAKD,CAlCD;;eAoCewB;;;;;ACpGf;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMa,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SACtB,4BAAc,KAAd,EAAqB;AACnBvD,IAAAA,KAAK,EAAE;AACLwD,MAAAA,EAAE,EAAE,KADC;AAELC,MAAAA,SAAS,EAAEF;AAFN,KADY;AAKnBtD,IAAAA,QAAQ,GACN,4BAAc,OAAd,CADM,EAENyD,MAAM,CAACH,KAAD,CAFA,4BAGHI,KAAK,CAACC,IAAN,CAAW;AAAEjC,MAAAA,MAAM,EAAE4B;AAAV,KAAX,EAA8B;AAAA,aAC/B,4BAAc,KAAd,EAAqB;AACnBvD,QAAAA,KAAK,EAAE;AACL6D,UAAAA,GAAG,EAAE;AADA;AADY,OAArB,CAD+B;AAAA,KAA9B,CAHG;AALW,GAArB,CADsB;AAAA,CAAxB;;AAmBA,IAAIN,KAAK,GAAG,CAAZ;AACA,IAAIO,IAAI,GAAGR,UAAU,CAACC,KAAD,CAArB;AACA,IAAMQ,IAAI,GAAG,qBAAOD,IAAP,CAAb;AAEA,IAAIE,OAAO,GAAG,oBAAMD,IAAN,EAAY3D,QAAQ,CAAC6D,cAAT,CAAwB,MAAxB,CAAZ,CAAd;AAEAC,WAAW,CAAC,YAAM;AAChBX,EAAAA,KAAK;AACL,MAAMY,OAAO,GAAGb,UAAU,CAACC,KAAD,CAA1B;AACA,MAAMrB,KAAK,GAAG,mBAAK4B,IAAL,EAAWK,OAAX,CAAd;AACAH,EAAAA,OAAO,GAAG9B,KAAK,CAAC8B,OAAD,CAAf;AACAF,EAAAA,IAAI,GAAGK,OAAP;AACD,CANU,EAMR,IANQ,CAAX;AAQAC,OAAO,CAACC,GAAR,CAAYN,IAAZ","file":"main.1f19ae8e.map","sourceRoot":"..\\src","sourcesContent":["export default (tagName, { attrs = {}, children = [] } = {}) => {\r\n  return {\r\n    tagName,\r\n    attrs,\r\n    children\r\n  };\r\n};\r\n","const renderElem = ({ tagName, attrs, children }) => {\r\n  const $el = document.createElement(tagName);\r\n\r\n  // set attributes\r\n  for (const [k, v] of Object.entries(attrs)) {\r\n    $el.setAttribute(k, v);\r\n  }\r\n\r\n  // set children\r\n  for (const child of children) {\r\n    const $child = render(child);\r\n    $el.appendChild($child);\r\n  }\r\n\r\n  return $el;\r\n};\r\n\r\nconst render = vNode => {\r\n  if (typeof vNode === 'string') {\r\n    return document.createTextNode(vNode);\r\n  }\r\n\r\n  return renderElem(vNode);\r\n};\r\n\r\nexport default render;\r\n","export default ($node, $target) => {\r\n  $target.replaceWith($node);\r\n  return $node;\r\n};\r\n","import render from './render';\r\n\r\nconst zip = (xs, ys) => {\r\n  const zipped = [];\r\n  for (let i = 0; i < Math.min(xs.length, ys.length); i++) {\r\n    zipped.push([xs[i], ys[i]]);\r\n  }\r\n  return zipped;\r\n};\r\n\r\nconst diffAttrs = (oldAttrs, newAttrs) => {\r\n  const patches = [];\r\n  // set new attributes\r\n  for (const [k, v] of Object.entries(newAttrs)) {\r\n    patches.push($node => {\r\n      $node.setAttribute(k, v);\r\n      return $node;\r\n    });\r\n  }\r\n\r\n  // remove old attributes\r\n  for (const k in oldAttrs) {\r\n    if (!(k in newAttrs)) {\r\n      patches.push($node => {\r\n        $node.removeAttribute(k);\r\n        return $node;\r\n      });\r\n    }\r\n  }\r\n\r\n  return $node => {\r\n    for (const patch of patches) {\r\n      patch($node);\r\n    }\r\n  };\r\n};\r\n\r\nconst diffChildren = (oldVChildren, newVChildren) => {\r\n  const childPatches = [];\r\n  oldVChildren.forEach((oldVChild, i) => {\r\n    childPatches.push(diff(oldVChild, newVChildren[i]));\r\n  });\r\n\r\n  const additionalPatches = [];\r\n  for (const additionalVChild of newVChildren.slice(oldVChildren.length)) {\r\n    additionalPatches.push($node => {\r\n      $node.appendChild(render(additionalVChild));\r\n      return $node;\r\n    });\r\n  }\r\n\r\n  return $parent => {\r\n    for (const [patch, child] of zip(childPatches, $parent.childNodes)) {\r\n      patch(child);\r\n    }\r\n\r\n    for (const patch of additionalPatches) {\r\n      patch($parent);\r\n    }\r\n\r\n    return $parent;\r\n  };\r\n};\r\n\r\nconst diff = (vOldNode, vNewNode) => {\r\n  if (vNewNode === undefined) {\r\n    return $node => {\r\n      $node.remove();\r\n      return undefined;\r\n    };\r\n  }\r\n  if (typeof vOldNode === 'string' || typeof vNewNode === 'string') {\r\n    if (vOldNode !== vNewNode) {\r\n      return $node => {\r\n        const $newNode = render(vNewNode);\r\n        $node.replaceWith($newNode);\r\n        return $newNode;\r\n      };\r\n    } else {\r\n      return $node => undefined;\r\n    }\r\n  }\r\n  if (vOldNode.tagName !== vNewNode.tagName) {\r\n    return $node => {\r\n      const $newNode = render(vNewNode);\r\n      $node.replaceWith($newNode);\r\n      return $newNode;\r\n    };\r\n  }\r\n\r\n  const patchAttrs = diffAttrs(vOldNode.attrs, vNewNode.attrs);\r\n  const patchChildren = diffChildren(vOldNode.children, vNewNode.children);\r\n\r\n  return $node => {\r\n    patchAttrs($node);\r\n    patchChildren($node);\r\n    return $node;\r\n  };\r\n};\r\n\r\nexport default diff;\r\n","import createElement from './vdom/createElement';\r\nimport render from './vdom/render';\r\nimport mount from './vdom/mount';\r\nimport diff from './vdom/diff';\r\n\r\nconst createVApp = count =>\r\n  createElement('div', {\r\n    attrs: {\r\n      id: 'app',\r\n      dataCount: count\r\n    },\r\n    children: [\r\n      createElement('input'),\r\n      String(count),\r\n      ...Array.from({ length: count }, () =>\r\n        createElement('img', {\r\n          attrs: {\r\n            src: 'https://media.giphy.com/media/cfuL5gqFDreXxkWQ4o/giphy.gif'\r\n          }\r\n        })\r\n      )\r\n    ]\r\n  });\r\n\r\nlet count = 0;\r\nlet vApp = createVApp(count);\r\nconst $app = render(vApp);\r\n\r\nlet $rootEl = mount($app, document.getElementById('root'));\r\n\r\nsetInterval(() => {\r\n  count++;\r\n  const vNewApp = createVApp(count);\r\n  const patch = diff(vApp, vNewApp);\r\n  $rootEl = patch($rootEl);\r\n  vApp = vNewApp;\r\n}, 1000);\r\n\r\nconsole.log($app);\r\n"]}